# Builds the Sphinx documentation in the specified folder.
# Default values are docs/ for the directory where the Sphinx
# documentation is located and true to run linkcheck
# To pass a new folder, set directory_path to the folder path
# Pass the arguments you wish to run, default command is make clean html linkcheck

---
name: sphinx

on: 
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    strategy:
      matrix:
        java: [8, 11]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Sphinx install
        run: pip install --upgrade sphinx
      - name: Build doc
        run: mvn install -DskipSphinxTests=true
      - name: Commit changes
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.java, '8') && contains(github.ref, 'master')
        run: |
          rm -rf sphinx
          rm -rf target/sphinx/cache
          rm -rf target/sphinx/html
          rm -rf target/sphinx/developers/examples/META-INF
          mv target/sphinx .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add sphinx
          git commit -m "Generate doc pages" || echo "No changes to commit"
  release:
    if: startsWith(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Sphinx install
        run: pip install --upgrade sphinx
      - name: Set up Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ome.staging
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Release doc
        run: mvn -DskipTests=true deploy
        env:
          MAVEN_USERNAME: ${{ secrets.CI_DEPLOY_USER }}
          MAVEN_PASSWORD: ${{ secrets.CI_DEPLOY_PASS }}
