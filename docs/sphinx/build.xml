<!--
build.xml

Ant build file for Bio-Formats Sphinx documentation.
Download Apache Ant from http://ant.apache.org/.
Type "ant -p" for a list of targets.
-->

<project name="sphinx" default="html" basedir=".">
  <description>Build file for sphinx documentation</description>
  <property name="root.dir" location="../.."/>
  <import file="${root.dir}/ant/version.xml"/>
  <import file="${root.dir}/ant/global.xml"/>

  <property name="sphinx.build" value="sphinx-build"/>
  <property name="sphinx.warnopts" value=""/>
  <property name="sphinx.opts" value=""/>
  <property name="sphinx.builddir" location="_build"/>
  <property name="latex.opts" value=""/>
  <property name="source.branch" value="develop"/>
  <property name="source.user" value="openmicroscopy"/>
  <property name="omerodoc.uri" value="http://www.openmicroscopy.org/site/support/omero5.1"/>

  <target name="init"/>

  <target name="html" depends="release-version">
    <exec executable="${sphinx.build}" failonerror="true">
      <arg value="-D"/>
      <arg value="release=${release.shortversion}"/>
      <arg value="-D"/>
      <arg value="version=${release.major}.${release.minor}"/>
      <arg value="-D"/>
      <arg value="source_branch=${source.branch}"/>
      <arg value="-D"/>
      <arg value="user=${source.user}"/>
      <arg value="-D"/>
      <arg value="omerodoc_uri=${omerodoc.uri}"/>
      <arg value="-b"/>
      <arg value="html"/>
      <arg line="${sphinx.opts}"/>
      <arg line="${sphinx.warnopts}"/>
      <arg value="."/>
      <arg value="${sphinx.builddir}/html"/>
    </exec>
    <delete dir="${artifact.dir}/bio-formats-doc-${release.shortversion}"/>
    <copy todir="${artifact.dir}/bio-formats-doc-${release.shortversion}">
      <!--
        include (none) to prevent problems if component.resources-bin is empty
      -->
      <fileset dir="_build/html"/>
    </copy>
    <zip destfile="${artifact.dir}/bio-formats-doc-${release.shortversion}.zip">
      <zipfileset dir="_build/html" includes="**/*" prefix="bio-formats-doc-${release.shortversion}"/>
    </zip>
    <delete dir="${artifact.dir}/bio-formats-doc-${release.shortversion}"/>
  </target>

  <target name="man" depends="release-version">
    <exec executable="${sphinx.build}" failonerror="true">
      <arg value="-D"/>
      <arg value="release=${release.shortversion}"/>
      <arg value="-D"/>
      <arg value="version=${release.major}.${release.minor}"/>
      <arg value="-D"/>
      <arg value="source_branch=${source.branch}"/>
      <arg value="-D"/>
      <arg value="user=${source.user}"/>
      <arg value="-D"/>
      <arg value="omerodoc_uri=${omerodoc.uri}"/>
      <arg value="-b"/>
      <arg value="man"/>
      <arg line="${sphinx.opts}"/>
      <arg value="."/>
      <arg value="${sphinx.builddir}/man"/>
    </exec>
  </target>

  <macrodef name="xelatex" description="Run XeLaTeX">
    <attribute name="file" default=""/>
    <sequential>
      <basename property="file.basename" file="@{file}"/>
      <dirname property="file.dirname" file="@{file}"/>
      <exec executable="xelatex" failonerror="true" dir="${file.dirname}">
        <arg line="${latex.opts}"/>
        <arg value="${file.basename}"/>
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="makeindex" description="Run makeindex">
    <attribute name="file" default=""/>
    <sequential>
      <basename property="file.basename" file="@{file}"/>
      <dirname property="file.dirname" file="@{file}"/>
      <propertyregex property="file.index" input="${file.basename}" regexp="(.*)\.tex" select="\1.idx"/>
      <exec executable="makeindex" failonerror="true" dir="${file.dirname}">
        <arg value="-s"/>
        <arg value="python.ist"/>
        <arg value="${file.index}"/>
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="runlatex">
    <attribute name="file" default=""/>
    <sequential>
      <basename property="jar.filename" file="${lib.jarfile}"/>
      <xelatex file="@{file}"/>
      <xelatex file="@{file}"/>
      <makeindex file="@{file}"/>
      <xelatex file="@{file}"/>
      <xelatex file="@{file}"/>
      <xelatex file="@{file}"/>
    </sequential>
  </macrodef>

  <target name="latexpdf" depends="release-version">
    <exec executable="${sphinx.build}" failonerror="true">
      <arg value="-D"/>
      <arg value="release=${release.shortversion}"/>
      <arg value="-D"/>
      <arg value="version=${release.major}.${release.minor}"/>
      <arg value="-D"/>
      <arg value="source_branch=${source.branch}"/>
      <arg value="-D"/>
      <arg value="user=${source.user}"/>
      <arg value="-D"/>
      <arg value="omerodoc_uri=${omerodoc.uri}"/>
      <arg value="-b"/>
      <arg value="latex"/>
      <arg line="${sphinx.opts}"/>
      <arg line="${sphinx.warnopts}"/>
      <arg value="."/>
      <arg value="${sphinx.builddir}/latex"/>
    </exec>
    <copy file="preamble.tex" todir="${sphinx.builddir}/latex"/>

    <for param="file">
      <path>
       <fileset dir="${sphinx.builddir}/latex" includes="*.tex"/>
      </path>
      <sequential>
        <runlatex file="@{file}"/>
      </sequential>
    </for>
    <copy file="_build/latex/Bio-Formats.pdf" tofile="${artifact.dir}/Bio-Formats-${release.shortversion}.pdf"/>
  </target>

  <target name="pdf" depends="latexpdf"/>

  <target name="linkcheck" depends="release-version">
    <exec executable="${sphinx.build}" failonerror="true">
      <arg value="-D"/>
      <arg value="release=${release.shortversion}"/>
      <arg value="-D"/>
      <arg value="version=${release.major}.${release.minor}"/>
      <arg value="-D"/>
      <arg value="source_branch=${source.branch}"/>
      <arg value="-D"/>
      <arg value="user=${source.user}"/>
      <arg value="-D"/>
      <arg value="omerodoc_uri=${omerodoc.uri}"/>
      <arg value="-b"/>
      <arg value="linkcheck"/>
      <arg line="${sphinx.opts}"/>
      <arg line="${sphinx.warnopts}"/>
      <arg value="."/>
      <arg value="${sphinx.builddir}/linkcheck"/>
    </exec>
  </target>

  <target name="clean">
    <delete dir="${sphinx.builddir}"/>
  </target>

</project>
